{
  "variables": {
    "iso_checksum": null,
    "iso_url": null,

    "vm_ram_size_in_mb": "2048",
    "vm_name": null,
    "vm_switch_name": "internal_switch",

    "admin_username": "admin",
    "admin_password": "admin",

    "dir_config_user": null,
    "dir_deploy": null,
    "dir_scripts_user": null,
    "dir_cookbooks_user": null,
    "dir_temp_packer": null
  },
  "builders": [
    {
      "boot_wait": "0s",
      "communicator": "winrm",
      "enable_secure_boot":true,
      "floppy_files": [],
      "generation": 2,
      "guest_additions_mode": "disable",
      "iso_checksum": "{{ user `iso_checksum` }}",
      "iso_checksum_type": "sha256",
      "iso_url": "{{ user `iso_url` }}",
      "iso_target_path": "{{ user `dir_temp_packer` }}",
      "output_directory": "{{ user `dir_deploy` }}/{{ user `vm_name` }}",
      "ram_size": "{{ user `vm_ram_size_in_mb` }}",
      "secondary_iso_images": [
          "{{ user `dir_deploy` }}/unattend.iso"
      ],
      "shutdown_command": "FOR %i IN (A B C D E F G H I J K L N M O P Q R S T U V W X Y Z) DO IF EXIST %i:\\run-sysprep.cmd (CALL %i:\\run-sysprep.cmd) &IF \"%ERRORLEVEL%\" == \"0\" (ECHO \"Shutdown script succeeded with exit code = %ERRORLEVEL%\" &EXIT 0) ELSE (ECHO \"Shutdown script failed with exit code = %ERRORLEVEL%\" &EXIT %ERRORLEVEL%)",
      "shutdown_timeout": "15m",
      "switch_name": "{{ user `vm_switch_name` }}",
      "type": "hyperv-iso",
      "vm_name": "{{ user `vm_name` }}",
      "winrm_password": "{{ user `admin_password` }}",
      "winrm_timeout": "2h",
      "winrm_username": "{{ user `admin_username` }}"
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "elevated_user": "{{user `admin_username`}}",
      "elevated_password": "{{user `admin_password`}}",
      "scripts": [
        "{{ user `dir_scripts_user` }}/Invoke-NGen.ps1",
        "{{ user `dir_scripts_user` }}/PrepareFor-DiskOptimization.ps1",
        "{{ user `dir_scripts_user` }}/Invoke-Defrag.ps1",
        "{{ user `dir_scripts_user` }}/Invoke-DiskOptimization.ps1",
        "{{ user `dir_scripts_user` }}/Invoke-SDelete.ps1"
      ]
    }
  ],
  "post-processors": [
        [
            {
                "output": "manifest.json",
                "strip_path": true,
                "type": "manifest"
            },
            {
                "inline": [
                    "jq \".builds[].files[].name\" manifest.json | xargs tar cfz artifacts.tgz"
                ],
                "type": "shell-local"
            }
        ]
    ]
}
